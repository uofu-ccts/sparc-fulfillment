#custom-toolbar
  = select_tag 'index_selectpicker', options_for_select((t(:sub_service_request)[:statuses].values.zip t(:sub_service_request)[:statuses].keys), 'All'), class: 'selectpicker'
.bootstrap-table-dropdown-overflow
  %table.protocols.custom_striped{id: "protocol-list", data: {toggle: 'table', search: "true", "show-columns" => "true", "show-refresh" => "true", "show-toggle" => "true", url: protocols_path(format: :json), "sort-name" => "sparc_id", "sort-order" => 'asc', cookie: "true", "cookie-id-table" => "protocols", striped: "true", toolbar: "#custom-toolbar", "show-export" => "true", "export-types" => ['excel']}}
    %thead
      %tr
        %th{data: {class: 'updates', align: 'left', field: 'updates'}}
          = t(:protocol)[:updates]
        %th{data: {class: 'srid', align: 'left', sortable: "true", field: 'srid'}}
          = t(:protocol)[:srid]
        %th{data: {class: 'status', align: 'left', sortable: "true", field: "status"}}
          = t(:protocol)[:status]
        %th{data: {class: 'short_title', align: 'left', sortable: "true", field: "short_title"}}
          = t(:protocol)[:short_title]
        %th{data: {class: 'pi', align: 'left', sortable: "true", field: "pi"}}
          = t(:protocol)[:principal_investigator]
        %th{data: {class: 'coordinators', align: 'center', sortable: "false", field: "coordinators"}}
          = t(:protocol)[:coordinators]
        %th{data: {class: 'irb_approval_date', align: 'center', sortable: "true", sorter: "dateSorter", field: "irb_approval_date"}}
          = t(:protocol)[:irb_approval_date]
        %th{data: {class: 'irb_expiration_date', align: 'center', sortable: "true", sorter: "dateSorter", field: "irb_expiration_date"}}
          = t(:protocol)[:irb_expiration_date]
        %th{data: {class: 'start_date', align: 'center', sortable: "true", sorter: "dateSorter", field: "start_date", visible: "false"}}
          = t(:protocol)[:start_date]
        %th{data: {class: 'end_date', align: 'center', sortable: "true", sorter: "dateSorter", field: "end_date", visible: "false"}}
          = t(:protocol)[:end_date]
        %th{data: {class: 'study_cost', align: 'right', sortable: "true", field: "study_cost", visible: "false"}}
          = t(:protocol)[:study_cost]
        %th{data: {class: 'total_at_approval', align: 'right', sortable: "true", field: "total_at_approval", visible: "false"}}
          = t(:protocol)[:total_at_approval]
        %th{data: {class: 'percent_subsidy', align: 'right', sortable: "true", field: "percent_subsidy", formatter: "number_to_percent", visible: "false"}}
          = t(:protocol)[:subsidy_amount]
        %th{data: {class: 'subsidy_committed', align: 'right', sortable: "true", field: "subsidy_committed", visible: "false"}}
          = t(:protocol)[:subsidy_committed]
        %th{data: {class: 'subsidy_expended', align: 'right', sortable: "true", field: "subsidy_expended", visible: "false"}}
          = t(:protocol)[:subsidy_expended]
        %th{data: {class: 'owner', align: 'right', sortable: "true", field: "owner", visible: "false"}}
          = t(:protocol)[:owner]
        %th{data: {class: 'requester', align: 'right', sortable: "true", field: "requester", visible: "false"}}
          = t(:protocol)[:requester]
        %th{data: {class: 'organizations', align: 'right', sortable: "true", field: "organizations", visible: "false"}}
          = t(:protocol)[:organizations]
